---
interface Props {
  outline?: boolean
  label?: boolean
}
const { outline = false, label = false } = Astro.props
---
<div class="btn-group">
  <button name="app-btn-light" class=`btn btn-${outline ? 'outline-' : ''}secondary`>
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-sun" viewBox="0 0 16 16">
      <path d="M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6m0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8M8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0m0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13m8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5M3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8m10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0m-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0m9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707M4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708"/>
    </svg>
    {label ? <span>Light</span> : null}
  </button>
  <button name="app-btn-dark" class=`btn btn-${outline ? 'outline-' : ''}secondary`>
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-moon" viewBox="0 0 16 16">
      <path d="M6 .278a.77.77 0 0 1 .08.858 7.2 7.2 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277q.792-.001 1.533-.16a.79.79 0 0 1 .81.316.73.73 0 0 1-.031.893A8.35 8.35 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.75.75 0 0 1 6 .278M4.858 1.311A7.27 7.27 0 0 0 1.025 7.71c0 4.02 3.279 7.276 7.319 7.276a7.32 7.32 0 0 0 5.205-2.162q-.506.063-1.029.063c-4.61 0-8.343-3.714-8.343-8.29 0-1.167.242-2.278.681-3.286"/>
    </svg>
    {label ? <span>Dark</span> : null}
  </button>
  <button name="app-btn-auto" class=`btn btn-${outline ? 'outline-' : ''}secondary`>
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-workspace" viewBox="0 0 16 16">
      <path d="M4 16s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1zm4-5.95a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5"/>
      <path d="M2 1a2 2 0 0 0-2 2v9.5A1.5 1.5 0 0 0 1.5 14h.653a5.4 5.4 0 0 1 1.066-2H1V3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v9h-2.219c.554.654.89 1.373 1.066 2h.653a1.5 1.5 0 0 0 1.5-1.5V3a2 2 0 0 0-2-2z"/>
    </svg>
    {label ? <span>Auto</span> : null}
  </button>
</div>

<script>
  
const eventHandling = () => {

  console.log("ThemeSelector:eventHandling")

  // Handle clicks on each button.
  document.querySelectorAll('button[name="app-btn-light"]').forEach((button) => {
    button.addEventListener('click', () => {
      setTheme('light')

    });
  });
  document.querySelectorAll('button[name="app-btn-dark"]').forEach((button) => {
    button.addEventListener('click', () => {
      setTheme('dark')
    });
  });
  document.querySelectorAll('button[name="app-btn-auto"]').forEach((button) => {
    button.addEventListener('click', () => {
      const mql = window.matchMedia("(prefers-color-scheme: dark)")
      const osTheme = mql.matches ? 'dark' : 'light'
      setTheme(osTheme, 'auto')
    });
  });
}

const setTheme = (theme: string, storeTheme?: string) => {
  document.documentElement.setAttribute("data-bs-theme", theme)
  localStorage.setItem("theme", storeTheme ?? theme)
  disableButtons(storeTheme)
}

const disableButtons = (theme?: string) => {
  const storedTheme = theme ?? localStorage.getItem("theme") ?? "auto"
  document.querySelectorAll('button[name="app-btn-light"]').forEach((button) => {
    if(storedTheme === 'light') {
      button.setAttribute("disabled", "true")
    } else {
      button.removeAttribute("disabled")
    }
  })
  document.querySelectorAll('button[name="app-btn-dark"]').forEach((button) => {
    if(storedTheme === 'dark') {
      button.setAttribute("disabled", "true")
    } else {
      button.removeAttribute("disabled")
    }
  })
  document.querySelectorAll('button[name="app-btn-auto"]').forEach((button) => {
    if(storedTheme === 'auto') {
      button.setAttribute("disabled", "true")
    } else {
      button.removeAttribute("disabled")
    }
  })
}

document.addEventListener('astro:page-load', () => {
  console.log("ThemeSelector:astro:page-load")
  eventHandling()
  disableButtons()
});

</script>